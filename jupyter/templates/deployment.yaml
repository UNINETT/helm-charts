apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/config: {{ include "oidcconfig" . | sha256sum }}
      labels:
        app: {{ template "fullname" . }}
    spec:
      volumes:
        - name: oidcconfig
          secret:
            secretName: {{ template "fullname" . }}
        - name: notebook-config
          configMap:
            name: {{ template "fullname" . }}
            items:
            - key: notebook_config.py
              path: notebook_config.py
        {{ if ne .Values.persistentStorage.existingClaim "" }}
        - name: {{ .Values.persistentStorage.existingClaimName }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistentStorage.existingClaim }}
        {{ end }}
      securityContext:
        runAsNonRoot: true
        fsGroup: 999
      containers:
      - name: auth-proxy
        image: quay.io/uninett/goidc-proxy:v1.1.3
        imagePullPolicy: Always
        env:
          - name: DATAPORTEN_CLIENTID
            valueFrom:
              secretKeyRef:
                name: {{ template "fullname" . }}
                key: dataporten_client_id
          - name: DATAPORTEN_CLIENTSECRET
            valueFrom:
              secretKeyRef:
                name: {{ template "fullname" . }}
                key: dataporten_client_secret
        ports:
          - containerPort: 8080
        securityContext:
          runAsUser: 65534
          readOnlyRootFilesystem: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 30
        volumeMounts:
          - name: oidcconfig
            mountPath: /conf
        workingDir: /conf
      - name: jupyter
        image: {{ .Values.dockerImage }}
        env:
          {{ if .Values.env.jupyterLab }}
          - name: JUPYTER_ENABLE_LAB
            value: "1"
          {{ end }}
          - name: SPARK_MASTER_SERVICE
            value: {{ .Values.env.sparkMasterUrl }}
          - name: SPARK_OPTS
            value: --master={{ .Values.env.sparkMasterUrl }}
          - name: SPARK_DRIVER_MEMORY   # Need to set these values according to allocated resources
            value: 1g
          - name: SPARK_DRIVER_CORES
            value: '1'
        resources:
{{ toYaml .Values.resources | indent 10 }}
        ports:
        - containerPort: 8888
        securityContext:
          runAsUser: 999
        volumeMounts:
        - name: notebook-config
          mountPath: /home/notebook/.jupyter/notebook_config.py
          subPath: notebook_config.py
        {{- if ne .Values.persistentStorage.existingClaim "" }}
        - name: {{ .Values.persistentStorage.existingClaimName }}
          mountPath: /mnt/{{ .Values.persistentStorage.existingClaimName }}
        {{- end -}}
