apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-hub
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-hub
        group: {{ .Release.Name }}-jupyterhub
        component: hub
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
        {{ if .Values.hub.labels -}}
        # Because toYaml + indent is super flaky
        {{ range $key, $value := .Values.proxy.labels -}}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
        {{- end }}
      annotations:
        # This lets us autorestart when the configmap changes!
        checksum/config-map: {{ include (print $.Template.BasePath "/hub/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/hub/secret.yaml") . | sha256sum }}
    spec:
      nodeSelector: {{ toJson .Values.hub.nodeSelector }}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: component
                      operator: In
                      values: ['proxy']
                    - key: release
                      operator: In
                      values: [ {{ .Release.Name | quote }} ]
      volumes:
      - name: config
        configMap:
          name: {{ .Release.Name }}-hub-config
      - name: secret
        secret:
          secretName: {{ .Release.Name }}-hub-secret
      {{ if .Values.hub.extraVolumes }}
{{ toYaml .Values.hub.extraVolumes | indent 6 }}
      {{ end }}
      securityContext:
        runAsUser: {{ .Values.hub.uid }}
        fsGroup: {{ .Values.hub.fsGid }}
      containers:
      {{- if .Values.hub.extraContainers }}
{{ toYaml .Values.hub.extraContainers | indent 6 }}
      {{ end }}
      - name: hub-container
        image: paalka/jupyterhub:latest
        command:
          - jupyterhub
          - --config
          - /srv/jupyterhub_config.py
          # We want to do automatic upgrades for sqlite-pvc by default, but allow users
          # to opt out of that if they want. Users using their own db need to 'opt in'
          # Go Templates treat nil and "" and false as 'false', making this code complex.
          # We can probably make this a one-liner, but doing combinations of boolean vars
          # in go templates is very inelegant & hard to reason about.
          {{- $upgradeType := typeOf .Values.hub.db.upgrade }}
          {{- if eq $upgradeType "bool" }}
          # .Values.hub.db.upgrade has been explicitly set to true or false
          {{- if .Values.hub.db.upgrade }}
          - --upgrade-db
          {{- end }}
          {{- else if eq $upgradeType "<nil>" }}
          # .Values.hub.db.upgrade is nil
          {{- if eq .Values.hub.db.type "sqlite-pvc" }}
          - --upgrade-db
          {{- end }}
          {{- end }}
        volumeMounts:
          - mountPath: /etc/jupyterhub/config/
            name: config
          - mountPath: /etc/jupyterhub/secret/
            name: secret
          {{ if .Values.hub.extraVolumeMounts }}
{{ toYaml .Values.hub.extraVolumeMounts | indent 10 }}
          {{ end }}
        resources:
{{ toYaml .Values.hub.resources | indent 12}}
        imagePullPolicy: {{ .Values.hub.imagePullPolicy }}
        env:
        # Put this here directly so hub will restart when we
        # change this
        - name: SINGLEUSER_IMAGE
          value:  "{{ .Values.singleuser.image.name }}:{{ .Values.singleuser.image.tag }}"
        {{ if .Values.hub.cookieSecret }}
        - name: JPY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-hub-secret
              key: hub.cookie-secret
        {{- end }}
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: PROXY_PUBLIC_SERVICE_NAME
          value: {{ .Release.Name | upper | replace "-" "_" }}_PROXY_HTTP_SERVICE
        - name: PROXY_API_SERVICE_NAME
          value: {{ .Release.Name | upper | replace "-" "_" }}_PROXY_API_SERVICE
        - name: HUB_SERVICE_NAME
          value: {{ .Release.Name | upper | replace "-" "_" }}_HUB_SERVICE
        - name: OAUTH_CLIENT_ID
          value: "{{ .Values.appstore_generated_data.dataporten.id }}"
        - name: OAUTH_CLIENT_SECRET
          value: "{{ .Values.appstore_generated_data.dataporten.client_secret }}"
        - name: OAUTH_CALLBACK_URL
          value: "https://{{ .Values.ingress.host }}/hub/oauth_callback"
        - name: CONFIGPROXY_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-hub-secret
              key: proxy.token
        {{ range $key, $value := .Values.hub.extraEnv -}}
        - name: {{ $key | quote }}
          value: {{ $value | quote }}
        {{ end -}}
        {{ if .Values.auth.state.enabled }}
        - name: JUPYTERHUB_CRYPT_KEY
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-hub-secret
              key: auth.state.crypto-key
        {{ end }}
        ports:
          - containerPort: 8081
            name: hub

      {{- if .Values.rbac.enabled }}
      serviceAccountName: hub
      {{- end }}
