apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-spark-master
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}-spark-master
        group: {{ template "fullname" . }}-spark
      annotations:
        checksum/config: {{ include "oidcconfig-spark" . | sha256sum }}
    spec:
      volumes:
        - name: oidcconfig-spark
          secret:
            secretName: {{ template "fullname" . }}-spark
        - name: {{ template "fullname" . }}-rewrite-config-vol
          configMap:
            name: {{ template "fullname" . }}-rewrite-config
      containers:
        - name: proxy-rewriter
          image: paalka/nginx-alpine
          imagePullPolicy: Always
          ports:
            - containerPort: 9001
          volumeMounts:
            - name: {{ template "fullname" . }}-rewrite-config-vol
              mountPath: /etc/nginx/conf.d
        - name: auth-proxy
          image: quay.io/uninett/goidc-proxy:v1.1.1
          imagePullPolicy: Always
          env:
            - name: DATAPORTEN_CLIENTID
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}-spark
                  key: dataporten_client_id
            - name: DATAPORTEN_CLIENTSECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "fullname" . }}-spark
                  key: dataporten_client_secret
          ports:
            - containerPort: 8000
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
            - name: oidcconfig-spark
              mountPath: /conf
          workingDir: /conf
        - name: spark-master
          image: quay.io/uninett/spark-master
          imagePullPolicy: Always
          ports:
            - containerPort: 7077
            - containerPort: 8080
          resources:
            requests:
                cpu: {{ .Values.master.resources.requests.cpu }}
                memory: {{ .Values.master.resources.requests.memory }}
            limits:
                cpu: {{ .Values.master.resources.limits.cpu }}
                memory: {{ .Values.master.resources.limits.memory }}
          env:
            - name: SPARK_PUBLIC_DNS
              value: {{ .Values.ingress.host }}

---
kind: Service
apiVersion: v1
metadata:
  name: {{ template "fullname" . }}-spark-master
  labels:
    group: {{ template "fullname" . }}-spark
spec:
  ports:
    - port: 7077
      targetPort: 7077
  selector:
    app: {{ template "fullname" . }}-spark-master

---
kind: Service
apiVersion: v1
metadata:
  name: {{ template "fullname" . }}-spark-master-ui
  labels:
    group: {{ template "fullname" . }}-spark
spec:
  ports:
    - port: 80
      targetPort: 8000
  selector:
    app: {{ template "fullname" . }}-spark-master

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}-rewrite-config
data:
  default.conf: |
    upstream node {
      server localhost:8080;
    }

    server {
        server_name             _;
        listen                  9001;

        location / {
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header Host {{ .Values.ingress.host }};
            proxy_pass http://node;
            proxy_redirect off;
            port_in_redirect off;
        }
        }
